<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rpc.proto

namespace Etcdserverpb;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>etcdserverpb.SnapshotResponse</code>
 */
class SnapshotResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * header has the current key-value store information. The first header in the snapshot
     * stream indicates the point in time of the snapshot.
     * </pre>
     *
     * <code>.etcdserverpb.ResponseHeader header = 1;</code>
     */
    private $header = null;
    /**
     * <pre>
     * remaining_bytes is the number of blob bytes to be sent after this message
     * </pre>
     *
     * <code>uint64 remaining_bytes = 2;</code>
     */
    private $remaining_bytes = 0;
    /**
     * <pre>
     * blob contains the next chunk of the snapshot in the snapshot stream.
     * </pre>
     *
     * <code>bytes blob = 3;</code>
     */
    private $blob = '';

    public function __construct() {
        \GPBMetadata\Rpc::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * header has the current key-value store information. The first header in the snapshot
     * stream indicates the point in time of the snapshot.
     * </pre>
     *
     * <code>.etcdserverpb.ResponseHeader header = 1;</code>
     */
    public function getHeader()
    {
        return $this->header;
    }

    /**
     * <pre>
     * header has the current key-value store information. The first header in the snapshot
     * stream indicates the point in time of the snapshot.
     * </pre>
     *
     * <code>.etcdserverpb.ResponseHeader header = 1;</code>
     */
    public function setHeader(&$var)
    {
        GPBUtil::checkMessage($var, \Etcdserverpb\ResponseHeader::class);
        $this->header = $var;
    }

    /**
     * <pre>
     * remaining_bytes is the number of blob bytes to be sent after this message
     * </pre>
     *
     * <code>uint64 remaining_bytes = 2;</code>
     */
    public function getRemainingBytes()
    {
        return $this->remaining_bytes;
    }

    /**
     * <pre>
     * remaining_bytes is the number of blob bytes to be sent after this message
     * </pre>
     *
     * <code>uint64 remaining_bytes = 2;</code>
     */
    public function setRemainingBytes($var)
    {
        GPBUtil::checkUint64($var);
        $this->remaining_bytes = $var;
    }

    /**
     * <pre>
     * blob contains the next chunk of the snapshot in the snapshot stream.
     * </pre>
     *
     * <code>bytes blob = 3;</code>
     */
    public function getBlob()
    {
        return $this->blob;
    }

    /**
     * <pre>
     * blob contains the next chunk of the snapshot in the snapshot stream.
     * </pre>
     *
     * <code>bytes blob = 3;</code>
     */
    public function setBlob($var)
    {
        GPBUtil::checkString($var, False);
        $this->blob = $var;
    }

}

