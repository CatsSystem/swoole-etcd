<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rpc.proto

namespace Etcdserverpb;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * From google paxosdb paper:
 * Our implementation hinges around a powerful primitive which we call MultiOp. All other database
 * operations except for iteration are implemented as a single call to MultiOp. A MultiOp is applied atomically
 * and consists of three components:
 * 1. A list of tests called guard. Each test in guard checks a single entry in the database. It may check
 * for the absence or presence of a value, or compare with a given value. Two different tests in the guard
 * may apply to the same or different entries in the database. All tests in the guard are applied and
 * MultiOp returns the results. If all tests are true, MultiOp executes t op (see item 2 below), otherwise
 * it executes f op (see item 3 below).
 * 2. A list of database operations called t op. Each operation in the list is either an insert, delete, or
 * lookup operation, and applies to a single database entry. Two different operations in the list may apply
 * to the same or different entries in the database. These operations are executed
 * if guard evaluates to
 * true.
 * 3. A list of database operations called f op. Like t op, but executed if guard evaluates to false.
 * </pre>
 *
 * Protobuf type <code>etcdserverpb.TxnRequest</code>
 */
class TxnRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * compare is a list of predicates representing a conjunction of terms.
     * If the comparisons succeed, then the success requests will be processed in order,
     * and the response will contain their respective responses in order.
     * If the comparisons fail, then the failure requests will be processed in order,
     * and the response will contain their respective responses in order.
     * </pre>
     *
     * <code>repeated .etcdserverpb.Compare compare = 1;</code>
     */
    private $compare;
    /**
     * <pre>
     * success is a list of requests which will be applied when compare evaluates to true.
     * </pre>
     *
     * <code>repeated .etcdserverpb.RequestOp success = 2;</code>
     */
    private $success;
    /**
     * <pre>
     * failure is a list of requests which will be applied when compare evaluates to false.
     * </pre>
     *
     * <code>repeated .etcdserverpb.RequestOp failure = 3;</code>
     */
    private $failure;

    public function __construct() {
        \GPBMetadata\Rpc::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * compare is a list of predicates representing a conjunction of terms.
     * If the comparisons succeed, then the success requests will be processed in order,
     * and the response will contain their respective responses in order.
     * If the comparisons fail, then the failure requests will be processed in order,
     * and the response will contain their respective responses in order.
     * </pre>
     *
     * <code>repeated .etcdserverpb.Compare compare = 1;</code>
     */
    public function getCompare()
    {
        return $this->compare;
    }

    /**
     * <pre>
     * compare is a list of predicates representing a conjunction of terms.
     * If the comparisons succeed, then the success requests will be processed in order,
     * and the response will contain their respective responses in order.
     * If the comparisons fail, then the failure requests will be processed in order,
     * and the response will contain their respective responses in order.
     * </pre>
     *
     * <code>repeated .etcdserverpb.Compare compare = 1;</code>
     */
    public function setCompare(&$var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Etcdserverpb\Compare::class);
        $this->compare = $arr;
    }

    /**
     * <pre>
     * success is a list of requests which will be applied when compare evaluates to true.
     * </pre>
     *
     * <code>repeated .etcdserverpb.RequestOp success = 2;</code>
     */
    public function getSuccess()
    {
        return $this->success;
    }

    /**
     * <pre>
     * success is a list of requests which will be applied when compare evaluates to true.
     * </pre>
     *
     * <code>repeated .etcdserverpb.RequestOp success = 2;</code>
     */
    public function setSuccess(&$var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Etcdserverpb\RequestOp::class);
        $this->success = $arr;
    }

    /**
     * <pre>
     * failure is a list of requests which will be applied when compare evaluates to false.
     * </pre>
     *
     * <code>repeated .etcdserverpb.RequestOp failure = 3;</code>
     */
    public function getFailure()
    {
        return $this->failure;
    }

    /**
     * <pre>
     * failure is a list of requests which will be applied when compare evaluates to false.
     * </pre>
     *
     * <code>repeated .etcdserverpb.RequestOp failure = 3;</code>
     */
    public function setFailure(&$var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Etcdserverpb\RequestOp::class);
        $this->failure = $arr;
    }

}

